// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'
apply plugin: 'kotlin'
apply plugin: 'kotlin-android-extensions'

buildscript {

    ext.kotlinVersion = '1.1.1'
    ext.gradleVersion = '2.3.0'
    ext.realm_version = '3.0.0'

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlinVersion"
        classpath "io.realm:realm-gradle-plugin:$realm_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }

    ext {
        androidApplicationId = "com.rantolin.cleanarchitecture"
        androidVersionCode = 1
        androidVersionName = "1.0"

        dataLibraryVersionCode = 1
        dataLibraryVersionName = "1.0"

        domainLibraryVersionCode = 1
        domainLibraryVersionName = "1.0"

        testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId = "com.rantolin.cleanarchitecture" + '.test'
    }

    task runUnitTests(dependsOn: [':data:testDebugUnitTest',':domain:testDebugUnitTest',':app:testDebugUnitTest']) {
        description 'Run all unit tests'
    }

    task runAcceptanceTests(dependsOn: [':app:connectedAndroidTest']) {
        description 'Run all acceptance tests.'
    }

    task deployDebug(type: Exec, dependsOn: 'app:installDebug') {
        def rootDir = project.rootDir
        def localProperties = new File(rootDir, "local.properties")
        if (localProperties.exists()) {
            Properties properties = new Properties()
            localProperties.withInputStream {
                inputStream -> properties.load(inputStream)
            }
            def sdkDir = properties.getProperty('sdk.dir')
            def adb = "$sdkDir/platform-tools/adb"
            commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.rantolin.cleanarchitecture/com.rantolin.cleanarchitecture.presentation.ui.activities.MainActivity'
        }
    }
}